<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>折返的Liung - liung</title><link>http://liung.github.io/</link><description>我如溪水，静静流淌在山涧~~我如白云，俯瞰此生今生~~</description><lastBuildDate>Wed, 01 Apr 2015 13:48:13 +0800</lastBuildDate><item><title>MissionPlanner-仿真界面分析</title><link>http://liung.github.io/blog/apm/2015-04-01-APM-MissionPlanner%E7%9A%84%E4%BB%BF%E7%9C%9F%E7%95%8C%E9%9D%A2.html</link><description>

&lt;p&gt;地面站软件Mission Planner的仿真界面的主要代码文件GCSViews下的Simulation.cs文件。本文详细对Simulation文件的代码内容进行分析。
&lt;/p&gt;
&lt;p&gt;文件Simulation.cs中包含了：&lt;/p&gt;
&lt;p&gt;Simulation类&lt;/p&gt;
&lt;p&gt;命名空间： MissionPlaner.GCSView …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 01 Apr 2015 13:48:13 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-04-01:/blog/apm/2015-04-01-APM-MissionPlanner的仿真界面.html</guid><category>APM</category><category>MP</category></item><item><title>升力系数的计算</title><link>http://liung.github.io/blog/qi-dong/2015-03-24-%E7%94%B1%E5%8E%8B%E5%8A%9B%E7%B3%BB%E6%95%B0%E8%AE%A1%E7%AE%97%E5%8D%87%E5%8A%9B%E7%B3%BB%E6%95%B0.html</link><description>&lt;p&gt;法向力N、轴向力A与升力L和阻力D的关系为：&lt;/p&gt;
&lt;p&gt;$$
L &amp;amp; = &amp;amp; N cos \alpha - A sin \alpha 
D …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 24 Mar 2015 22:41:01 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-03-24:/blog/qi-dong/2015-03-24-由压力系数计算升力系数.html</guid><category>气动</category></item><item><title>APM-使用命令行界面</title><link>http://liung.github.io/blog/apm/2015-02-15-APM-%E4%BD%BF%E7%94%A8%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%95%8C%E9%9D%A2.html</link><description>&lt;p&gt;&lt;strong&gt;注意：命令行界面（Command Line Interface， CLI）功能并非支持所有的平台。本地一些特性功能仅限与AC3.1.5和之前版本使用 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 15 Feb 2015 00:08:34 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-02-15:/blog/apm/2015-02-15-APM-使用命令行界面.html</guid><category>APM</category><category>CLI</category></item><item><title>APM-使用调试终端与APM交互</title><link>http://liung.github.io/blog/apm/2015-02-14-APM-%E4%BD%BF%E7%94%A8%E8%B0%83%E8%AF%95%E7%BB%88%E7%AB%AF%E4%B8%8EAPM%E4%BA%A4%E4%BA%92.html</link><description>&lt;h3&gt;说明&lt;/h3&gt;
&lt;p&gt;
地面站的调试终端协议是与APM通过简单的终端界面进行交互的适宜人类可读的文本的一种方式。通过地面站的终端界面，用户可以改变APM的一些运行参数状态，甚至是在实时飞行过程中，并且还能够读取到各种不同的飞行参数信息，使得更加了解APM实时运行的动作。&lt;/p&gt;
&lt;p&gt;调试终端工具主要用来探索与测试APM的特性；目前并不赞成作为用户终端界面使用。大部分的飞行状态参数都是根据源代码中执行的计算结果来返回的结构化的数据 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 14 Feb 2015 23:54:32 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-02-14:/blog/apm/2015-02-14-APM-使用调试终端与APM交互.html</guid><category>APM</category><category>Terminal</category></item><item><title>APM-串口输出</title><link>http://liung.github.io/blog/apm/2015-02-14-APM-%E4%B8%B2%E5%8F%A3%E8%BE%93%E5%87%BA.html</link><description>&lt;p&gt;这里给出了一些串口的输出内容中包含的数字和信息的解释说明。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;
在数据流中经常会包含有大量的数据信息返回到本地PC机上。对于代码调试而言，即使是通过地面设备或本地PC图形界面获取到到这些信息的一些只言片语的解释说明，‘串口打印输出’也是非常有用的。下面将对两段简短的文本信息进行解释，同时包含了对一些标准字符串的值。
&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;例 …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 14 Feb 2015 22:39:35 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-02-14:/blog/apm/2015-02-14-APM-串口输出.html</guid><category>APM</category><category>Serial</category></item><item><title>APM-使用Git和GitHub进行APM代码管理</title><link>http://liung.github.io/blog/apm/2015-02-03-APM-%E4%BD%BF%E7%94%A8Git%E5%92%8CGitHub%E8%BF%9B%E8%A1%8CAPM%E4%BB%A3%E7%A0%81%E7%AE%A1%E7%90%86.html</link><description>&lt;h3&gt;如何开始使用Git进行APM源码操作&lt;/h3&gt;
&lt;p&gt;目前APM源代码在线托管在&lt;a href="https://github.com/diydrones/ardupilot"&gt;https://github.com/diydrones/ardupilot&lt;/a&gt;上。如果你需要了解更多关于forking/cloning该项目的一些细节 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 03 Feb 2015 19:27:42 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-02-03:/blog/apm/2015-02-03-APM-使用Git和GitHub进行APM代码管理.html</guid><category>APM</category><category>Git</category><category>GitHub</category></item><item><title>APM-加载代码到APM2.x</title><link>http://liung.github.io/blog/apm/2015-02-01-APM-%E5%8A%A0%E8%BD%BD%E4%BB%A3%E7%A0%81%E5%88%B0APM2.x.html</link><description>&lt;h3&gt;你还需要：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;mini USB传输线（APM需要） 或者 micro USB传输线（APM2需要）&lt;/li&gt;
&lt;li&gt;&lt;a href="http://firmware.diydrones.com/Tools/Arduino/"&gt;Windows&lt;/a&gt;或 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 01 Feb 2015 12:48:01 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-02-01:/blog/apm/2015-02-01-APM-加载代码到APM2.x.html</guid><category>APM</category></item><item><title>APM-MAVLink命令集</title><link>http://liung.github.io/blog/apm/2015-01-29-APM-mavlink_commands.html</link><description>&lt;h3&gt;APM 2.0 命令集&lt;/h3&gt;
&lt;p&gt;
APM 2.0版本已经采用部分MAVLink消息协议。&lt;a href="http://diydrones.com/group/arducopterusergroup/forum/topics/mavlink-tutorial-for-absolute-dummies-part-i?xg_source=activity"&gt;这里&lt;/a&gt;有一份“傻瓜式指南 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 29 Jan 2015 17:45:52 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-29:/blog/apm/2015-01-29-APM-mavlink_commands.html</guid><category>APM</category><category>MAVLink</category></item><item><title>APM-MAVLink参数集</title><link>http://liung.github.io/blog/apm/2015-01-29-APM-mavlink_parameters.html</link><description>

&lt;p&gt;本页面列出了所有用户可修改的MAVLink参数及这些参数的作用。用户可以使用任何兼容的地面站软件通过MAVLink参数窗口对这些参数进行修改，比如Mission Planner，APM Planner或者QGroundControl。&lt;a href="http://diydrones.com/group/arducopterusergroup/forum/topics/mavlink-tutorial-for-absolute-dummies-part-i?xg_source=activity"&gt;这里&lt;/a&gt;有一份“傻瓜式指南”直接对MAVLink进行操作 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 29 Jan 2015 17:45:52 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-29:/blog/apm/2015-01-29-APM-mavlink_parameters.html</guid><category>APM</category><category>MAVLink</category></item><item><title>APM-GPS原始输出</title><link>http://liung.github.io/blog/apm/2015-01-29-APM-GPS_input_raw.html</link><description>&lt;h3&gt;原始GPS输出&lt;/h3&gt;
&lt;p&gt;
本页面用来说明GPS模块原始的输出形式。如果你在GPS的正常测试过程中遇到问题，那么这些命令可能有助于你进行调试。
&lt;/p&gt;
&lt;p&gt;&lt;em&gt;大多数用户不推荐，仅用于GPS底层硬件调试&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;如果你想要以ASCII格式查看GPS输出，在测试命令窗口将该行：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;Serial&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;print …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 29 Jan 2015 15:39:21 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-29:/blog/apm/2015-01-29-APM-GPS_input_raw.html</guid><category>APM</category></item><item><title>APM-GPS指南</title><link>http://liung.github.io/blog/apm/2015-01-29-APM-GPS-Guide.html</link><description>



&lt;h3&gt;GPS指南&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;  &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;EXPLAINED&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;   
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;Diydrones&lt;/span&gt; &lt;span class="nv"&gt;is&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;Open&lt;/span&gt; &lt;span class="nv"&gt;source&lt;/span&gt; &lt;span class="nv"&gt;site&lt;/span&gt; &lt;span class="nv"&gt;and&lt;/span&gt; &lt;span class="nv"&gt;different …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 29 Jan 2015 14:36:02 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-29:/blog/apm/2015-01-29-APM-GPS-Guide.html</guid><category>APM</category></item><item><title>APM-Combo4</title><link>http://liung.github.io/blog/apm/2015-01-28-APM-Combo4.html</link><description>



&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//-------------------------------------&lt;/span&gt;
#&lt;span class="nv"&gt;define&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_MTK&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;AVAILABLE&lt;/span&gt; &lt;span class="nv"&gt;OPTIONS&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_NONENo&lt;/span&gt; &lt;span class="nv"&gt;GPS&lt;/span&gt; &lt;span class="nv"&gt;attached&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_IMU&lt;/span&gt; &lt;span class="nv"&gt;X …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 28 Jan 2015 14:36:02 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-28:/blog/apm/2015-01-28-APM-Combo4.html</guid><category>APM</category></item><item><title>APM-Combo3</title><link>http://liung.github.io/blog/apm/2015-01-28-APM-Combo3.html</link><description>



&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//-------------------------------------&lt;/span&gt;
#&lt;span class="nv"&gt;define&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_MTK&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="nv"&gt;AVAILABLE&lt;/span&gt; &lt;span class="nv"&gt;OPTIONS&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_NONENo&lt;/span&gt; &lt;span class="nv"&gt;GPS&lt;/span&gt; &lt;span class="nv"&gt;attached&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="nv"&gt;GPS_PROTOCOL_IMU&lt;/span&gt; &lt;span class="nv"&gt;X …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 28 Jan 2015 14:35:01 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-28:/blog/apm/2015-01-28-APM-Combo3.html</guid><category>APM</category></item><item><title>APM-Combo2</title><link>http://liung.github.io/blog/apm/2015-01-28-APM-Combo2.html</link><description>



&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="c1"&gt;-------------------------------&lt;/span&gt;
&lt;span class="o"&gt;#&lt;/span&gt;&lt;span class="n"&gt;define&lt;/span&gt; &lt;span class="n"&gt;GPS_PROTOCOL&lt;/span&gt; &lt;span class="n"&gt;GPS_PROTOCOL_MTK&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt;   &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;AVAILABLE&lt;/span&gt; &lt;span class="k"&gt;OPTIONS&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;GPS_PROTOCOL_NONENo&lt;/span&gt; &lt;span class="n"&gt;GPS&lt;/span&gt; &lt;span class="n"&gt;attached&lt;/span&gt;
&lt;span class="o"&gt;//&lt;/span&gt; &lt;span class="n"&gt;GPS_PROTOCOL_IMU&lt;/span&gt; &lt;span class="n"&gt;X …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 28 Jan 2015 14:28:05 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-28:/blog/apm/2015-01-28-APM-Combo2.html</guid><category>APM</category></item><item><title>飞行器相关站点</title><link>http://liung.github.io/blog/fei-xing-qi/2015-01-27-web_site_about_aircraft.html</link><description>&lt;h3&gt;飞行器设计站点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;http://mach-up.com/&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 27 Jan 2015 16:16:17 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-27:/blog/fei-xing-qi/2015-01-27-web_site_about_aircraft.html</guid></item><item><title>APM-使用Visual Studio编译Mission Planner</title><link>http://liung.github.io/blog/apm/2015-01-24-APM-%E4%BD%BF%E7%94%A8Visual_Studio%E7%BC%96%E8%AF%91Mission_Planner.html</link><description>&lt;h3&gt;简介&lt;/h3&gt;


&lt;p&gt;Mission Planner（简称MP）是一款Windows平台使用（可通过mono实现Mac平台上的跨平台使用）的开源地面站软件，主要开发语言采用C#。该软件是目前使用最普遍的一款地面站软件，它不仅面向各种载具提供了完备地功能性设置 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 24 Jan 2015 14:19:53 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-24:/blog/apm/2015-01-24-APM-使用Visual_Studio编译Mission_Planner.html</guid><category>APM</category><category>Mission Planner</category></item><item><title>无人机（UAV）</title><link>http://liung.github.io/blog/fei-xing-qi/UAV.html</link><description>&lt;h3&gt;美国&lt;/h3&gt;


&lt;p&gt;美国军方在为无人系统编写军用编号时，采用的是导弹序列的编号模式，即以“M”打头，之前，再加上前缀“Q”，这一做法有其历史 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Mon, 19 Jan 2015 22:01:05 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2015-01-19:/blog/fei-xing-qi/UAV.html</guid></item><item><title>APM-I2C</title><link>http://liung.github.io/blog/apm/2014-10-19-APM-I2C.html</link><description>&lt;p&gt;&lt;em&gt;关于串行总线（$I^2C$），请阅读维基百科相关条目（&lt;a href="http://zh.wikipedia.org/wiki/I%C2%B2C"&gt;$I^2C$&lt;/a&gt;）&lt;/em&gt;&lt;/p&gt;
&lt;h3&gt;使用其他I2C通信传感器&lt;/h3&gt;
&lt;p&gt;
你可以使用任何你想使用的I2C传感器连接到I2C端口。I2C is …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 19 Oct 2014 13:22:24 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-19:/blog/apm/2014-10-19-APM-I2C.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-采用Make方法编译APM2.x（Win，Mac，Linux）</title><link>http://liung.github.io/blog/apm/2014-10-17-APM-%E9%87%87%E7%94%A8Make%E6%96%B9%E6%B3%95%E7%BC%96%E8%AF%91APM2.x%EF%BC%88Win%EF%BC%8CMac%EF%BC%8CLinux%EF%BC%89.html</link><description>&lt;h3&gt;概述&lt;/h3&gt;
&lt;p&gt;
对于开发者而言编译APM应用的最佳方式是使用带有分布式版本管理的Makefile系统，该系统是编译APM的标准方式。APM应用不再使用标准的Arduino IDE,因为APM编译需要的Arduino IDE基础库已经被排除在编译之外。&lt;/p&gt;
&lt;p&gt;对于不喜欢使用make方法的开发者，可以使用一个修改版的Arduino IDE来模拟通常的APM编译过程 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 17 Oct 2014 12:55:14 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-17:/blog/apm/2014-10-17-APM-采用Make方法编译APM2.x（Win，Mac，Linux）.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-Windows7上的MAVProxy使用</title><link>http://liung.github.io/blog/apm/2014-10-16-APM-Windows7%E4%B8%8A%E7%9A%84MAVProxy%E4%BD%BF%E7%94%A8.html</link><description>&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;本说明取自于Ben Dellar在DIY Drones上的一篇&lt;a href="http://diydrones.com/profiles/blogs/step-by-step-guide-to-mavproxy-on-windows-7-live-forward-your-uav?xg_source=activity"&gt;优秀的指导手册&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;MAVProxy是一款强大的地面站软件，它极大的扩充了GUI界面的地面站。比如Mission Planner，APM …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 16 Oct 2014 13:54:19 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-16:/blog/apm/2014-10-16-APM-Windows7上的MAVProxy使用.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-使用Atmel Studio 或者微软的Visual Studio编辑代码</title><link>http://liung.github.io/blog/apm/2014-10-16-APM-%E4%BD%BF%E7%94%A8Atmel_Studio%E6%88%96%E8%80%85%E5%BE%AE%E8%BD%AF%E7%9A%84Visual_Studio%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81.html</link><description>&lt;p&gt;&lt;img alt="1" src="http://dev.ardupilot.com/wp-content/uploads/sites/6/2014/04/Atmel-Studio-+-Visual-Micro-300x238.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;
对APM代码开发需要一款高鲁棒性的开发环境？请尝试使用Atmel Studio 6.2或者带有&lt;a href="http://www.visualmicro.com/"&gt;Visual Micro&lt;/a&gt;插件的微软Visual Studio吧 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 16 Oct 2014 13:54:19 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-16:/blog/apm/2014-10-16-APM-使用Atmel_Studio或者微软的Visual_Studio编辑代码.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-使用Eclipse进行ArduPilot Mega开发</title><link>http://liung.github.io/blog/apm/2014-10-16-APM-%E4%BD%BF%E7%94%A8Eclipse%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81.html</link><description>&lt;h3&gt;综述&lt;/h3&gt;


&lt;ol&gt;
&lt;li&gt;Eclipse是一款精致地多语言集成开发平台&lt;/li&gt;
&lt;li&gt;Eclipse CDT（C++开发工具）实现了支持在Eclipse平台进行C/C++开发&lt;/li&gt;
&lt;li&gt;Eclipse …&lt;/li&gt;&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 16 Oct 2014 13:54:19 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-16:/blog/apm/2014-10-16-APM-使用Eclipse编辑代码.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-使用NotePad++编辑代码</title><link>http://liung.github.io/blog/apm/2014-10-16-APM-%E4%BD%BF%E7%94%A8NotePad++%E7%BC%96%E8%BE%91%E4%BB%A3%E7%A0%81.html</link><description>&lt;h3&gt;NotePad++&lt;/h3&gt;
&lt;p&gt;
NOtePad++是开发团队最常用的一款编辑器，可以在&lt;a href="http://notepad-plus-plus.org/"&gt;这里&lt;/a&gt;下载。
&lt;/p&gt;
&lt;h3&gt;使用工程面板组织多文件&lt;/h3&gt;
&lt;p&gt;&lt;img alt="img0" src="http://dev.ardupilot.com/wp-content/uploads/sites/6/2013/08/NotePad_ProjectPanel.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;设置PDE文件为C++格式&lt;/h3&gt;
&lt;p&gt;&lt;img alt="img1" src="http://dev.ardupilot.com/wp-content/uploads/sites/6/2013/08/NotePad_SetupPDE-1024x603.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;使用空白符代替Tab …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Thu, 16 Oct 2014 13:54:19 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-16:/blog/apm/2014-10-16-APM-使用NotePad++编辑代码.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-回放功能测试</title><link>http://liung.github.io/blog/apm/2014-10-15-APM-%E5%9B%9E%E6%94%BE%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95.html</link><description>&lt;h3&gt;简介&lt;/h3&gt;


&lt;p&gt;回放功能是用来处理dataflash日志文件的一套程序，并通过最近的主代码展示一系列基于真实数据的模拟结果。它可以用来重现产生bug的准确情形，或在同样的条件下测试改变EKF参数的影响。回放功能仅仅运行于Liunx/Ubuntu平台，且仅适用来自于高速CPU诸如PX4/Pixhawk运行2014年5月之后的ArduCopter/ArduPlane …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 15 Oct 2014 18:44:26 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-15:/blog/apm/2014-10-15-APM-回放功能测试.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-Linux上SITL仿真设置</title><link>http://liung.github.io/blog/apm/2014-10-14-APM-Linux%E4%B8%8ASITL%E4%BB%BF%E7%9C%9F%E8%AE%BE%E7%BD%AE.html</link><description>&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;
SITL（software in the loop）仿真可以让你在没有任何硬件的情况下运行ArduPlane，Copter或者Rover。它使用通用的C++编译器来完成autopilot的代码编译工作 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 15 Oct 2014 14:06:42 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-15:/blog/apm/2014-10-14-APM-Linux上SITL仿真设置.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-Windows上SITL仿真设置</title><link>http://liung.github.io/blog/apm/2014-10-14-APM-Windows%E4%B8%8ASITL%E4%BB%BF%E7%9C%9F%E8%AE%BE%E7%BD%AE.html</link><description>&lt;h3&gt;简介&lt;/h3&gt;
&lt;p&gt;
SITL（software in the loop）仿真可以让你在没有任何硬件的情况下运行ArduPlane，Copter或者Rover。它使用通用的C++编译器来完成autopilot的代码编译工作 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 14 Oct 2014 13:56:44 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-14:/blog/apm/2014-10-14-APM-Windows上SITL仿真设置.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-模拟仿真</title><link>http://liung.github.io/blog/apm/2014-10-14-APM-%E6%A8%A1%E6%8B%9F%E4%BB%BF%E7%9C%9F.html</link><description>&lt;!-- PELICAN_BEGIN__SUMMARY --&gt;

&lt;p&gt;本页面描述了如何使用APM进行模拟仿真，它可以让我们安全的测试试验代码和一些设置。毕竟，撞毁模拟飞机可要比真实的飞机划算的多哦！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬件循环仿真（HITL）:&lt;/strong&gt;硬件仿真使用模拟器代替真实的飞行器和大气环境，该模拟器包含有高精度的飞行动力学模型和大气环境模型（模拟气流，突风等 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 14 Oct 2014 13:52:49 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-10-14:/blog/apm/2014-10-14-APM-模拟仿真.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>常用气动软件</title><link>http://liung.github.io/blog/qi-dong/2014-09-17-%E5%B8%B8%E7%94%A8%E6%B0%94%E5%8A%A8%E8%BD%AF%E4%BB%B6.html</link><description>&lt;h3&gt;XFoil&lt;/h3&gt;
&lt;p&gt;XFoil是一个为设计和分析亚音速飞机独立翼型编写的互动式的程序&lt;/p&gt;
&lt;p&gt;主页：&lt;a href="http://web.mit.edu/drela/Public/web/xfoil/"&gt;&lt;strong&gt;http://web.mit.edu/drela/Public/web …&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 17 Sep 2014 10:55:29 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-17:/blog/qi-dong/2014-09-17-常用气动软件.html</guid><category>气动</category><category>气动软件</category></item><item><title>Pandas学习笔记</title><link>http://liung.github.io/blog/python/2014-09-14-Pandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</link><description>&lt;p&gt;通过索引方式返回的列只是相应数据的视图，因此，对返回的Series所做的任何就地修改都会反映到DataFrame上。通过Series的&lt;code&gt;copy&lt;/code&gt;方法可显式地复制列。&lt;/p&gt;
&lt;h4&gt;DataFrame构造器可以接受的数据：&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;二维ndarray：&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;由数组、列表或元祖组成的字典 …&lt;/strong&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 14 Sep 2014 14:26:24 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-14:/blog/python/2014-09-14-Pandas学习笔记.html</guid><category>python</category><category>ipython</category><category>pandas</category></item><item><title>Numpy学习笔记</title><link>http://liung.github.io/blog/python/2014-09-14-numpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html</link><description>&lt;hr&gt;
&lt;h3&gt;数组的方法&lt;/h3&gt;
&lt;h4&gt;数组转置和轴对换&lt;/h4&gt;
&lt;p&gt;转置（&lt;strong&gt;transpose&lt;/strong&gt;，或者通过&lt;strong&gt;T属性&lt;/strong&gt;）返回的是源数据视图（不会进行任何复制操作）。ndarray还有一个&lt;strong&gt;swapaxes …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 14 Sep 2014 12:49:44 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-14:/blog/python/2014-09-14-numpy学习笔记.html</guid><category>Python</category><category>Numpy</category></item><item><title>APM-Linux平台上用Make方法编译Pixhawk/PX4</title><link>http://liung.github.io/blog/apm/2014-09-10-APM-Linux%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Make%E6%96%B9%E6%B3%95%E7%BC%96%E8%AF%91Pixhawk%E5%92%8CPX4.html</link><description>&lt;h3&gt;快速开始&lt;/h3&gt;
&lt;p&gt;
对于Ubuntu平台，采用下面步骤来编译代码。对于Linux其他平台，请参阅下面的更深入的说明
&lt;/p&gt;
&lt;h4&gt;1、安装&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;安装git&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 10 Sep 2014 17:24:31 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-10:/blog/apm/2014-09-10-APM-Linux平台上用Make方法编译Pixhawk和PX4.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-Linux平台上用Make方法编译APM2.x</title><link>http://liung.github.io/blog/apm/2014-09-10-APM-Linux%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Make%E6%96%B9%E6%B3%95%E7%BC%96%E8%AF%91APM2.x.html</link><description>&lt;h3&gt;快速开始&lt;/h3&gt;
&lt;p&gt;
对于Ubuntu平台，采用下面步骤来编译代码。对于Linux其他平台，请参阅下面的更深入的说明
&lt;/p&gt;
&lt;h4&gt;1、安装&lt;/h4&gt;
&lt;p&gt;安装git&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 10 Sep 2014 17:18:44 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-10:/blog/apm/2014-09-10-APM-Linux平台上用Make方法编译APM2.x.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-MacOS平台上用Make方法编译Pixhawk/PX4</title><link>http://liung.github.io/blog/apm/2014-09-08-APM-MacOS%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Make%E6%96%B9%E6%B3%95%E7%BC%96%E8%AF%91Pixhawk%E5%92%8CPX4.html</link><description>&lt;h3&gt;MAC (10.6版本或更早)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、&lt;/strong&gt;在Mac OS X上安装Homebrew&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;使用brew命令安装下列包&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;brew …&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Mon, 08 Sep 2014 09:27:32 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-08:/blog/apm/2014-09-08-APM-MacOS平台上用Make方法编译Pixhawk和PX4.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-MacOS平台上用Arduino编译APM2.x</title><link>http://liung.github.io/blog/apm/2014-09-08-APM-MacOS%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Arduino%E7%BC%96%E8%AF%91APM2.x.html</link><description>

&lt;p&gt;在MacOS平台上针对AVR芯片的Ardupilot的源码编译可以有两种选择。第一种是使用特殊版的Arduino编译环境。你可以在&lt;a href="http://firmware.diydrones.com/"&gt;http://firmware.diydrones.com/&lt;/a&gt;的工具目录下获得。第二种选择是使用&lt;code&gt;make …&lt;/code&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Mon, 08 Sep 2014 09:02:28 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-08:/blog/apm/2014-09-08-APM-MacOS平台上用Arduino编译APM2.x.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-Windows平台使用Make方法编译Pixhawk和PX4</title><link>http://liung.github.io/blog/apm/2014-09-07-APM-Windows%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Make%E6%96%B9%E6%B3%95%E7%BC%96%E8%AF%91Pixhawk%E5%92%8CPX4.html</link><description>&lt;h3&gt;Windows平台&lt;/h3&gt;
&lt;p&gt;
&lt;strong&gt;1、&lt;/strong&gt; 安装&lt;a href="http://windows.github.com/"&gt;Github for Windows&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、&lt;/strong&gt;  确保你的github上设置行结束符不发生改变。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当你安装完成Git，顺带也安装了 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 07 Sep 2014 13:59:57 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-07:/blog/apm/2014-09-07-APM-Windows平台上用Make方法编译Pixhawk和PX4.html</guid><category>APM</category><category>硬件</category></item><item><title>APM-Windows平台上用Arduino编译ArduPilot</title><link>http://liung.github.io/blog/apm/2014-09-06-APM-Windows%E5%B9%B3%E5%8F%B0%E4%B8%8A%E7%94%A8Arduino%E7%BC%96%E8%AF%91ArduPilot.html</link><description>

&lt;p&gt;&lt;strong&gt;版本要求： Copter 3.1， Plane 2.76&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬件要求： APM 2 …&lt;/strong&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 06 Sep 2014 15:34:19 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-06:/blog/apm/2014-09-06-APM-Windows平台上用Arduino编译ArduPilot.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-编译代码</title><link>http://liung.github.io/blog/apm/2014-09-06-APM-%E7%BC%96%E8%AF%91%E4%BB%A3%E7%A0%81.html</link><description>

&lt;p&gt;下面这些页面的链接，将提供给你更多关于如何编译APM2.x和PX4的飞行器控制和地面站源码的信息。&lt;/p&gt;


&lt;hr&gt;
&lt;h3&gt;APM:Plane,Copter,Rover:&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Windows用户：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://liung.github.io/blog/apm/2014-09-06-APM-Windows平台上用Arduino编译ArduPilot.html"&gt;Windows平台上用Arduino编译ArduPilot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://liung.github.io/blog/apm/2014-09-07-APM-Windows平台上用Make方法编译Pixhawk和PX4.html"&gt;Windows平台上用Make方法编译Pixhawk …&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 06 Sep 2014 14:03:34 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-06:/blog/apm/2014-09-06-APM-编译代码.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-增加新的MAVLink通讯协议消息</title><link>http://liung.github.io/blog/apm/2014-09-05-APM-%E5%A2%9E%E5%8A%A0%E6%96%B0%E7%9A%84MAVLink%E9%80%9A%E8%AE%AF%E5%8D%8F%E8%AE%AE%E6%B6%88%E6%81%AF.html</link><description>&lt;h3&gt;综述&lt;/h3&gt;
&lt;p&gt;
地面站之间的数据和指令通信都是通过串行接口使用&lt;a href="http://en.wikipedia.org/wiki/MAVLink"&gt;MAVLink协议&lt;/a&gt;来传递的。本页面将提供关于添加新的MAVLink信息的一些高级建议。&lt;/p&gt;
&lt;p&gt;这些指令仅在Liunx上测试完成（通过Windows上虚拟机运行的Ubuntu）。关于设置虚拟机的方法在&lt;a href="http://dev.ardupilot.com/wiki/code-overview-adding-a-new-mavlink-message/wiki/setting-up-sitl-on-windows/"&gt;SITL(软件层面仿真 …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 05 Sep 2014 14:41:58 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-05:/blog/apm/2014-09-05-APM-增加新的MAVLink通讯协议消息.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-规划新代码使之按一定频率运行</title><link>http://liung.github.io/blog/apm/2014-09-05-APM-ArduCopter%E8%A7%84%E5%88%92%E6%96%B0%E4%BB%A3%E7%A0%81%E4%BD%BF%E4%B9%8B%E6%8C%89%E4%B8%80%E5%AE%9A%E9%A2%91%E7%8E%87%E8%BF%90%E8%A1%8C.html</link><description>&lt;p&gt;本页面将向你介绍如何规划你的新代码块使之可以按需运行。&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;用代码调度器运行你的代码&lt;/h3&gt;
&lt;p&gt;在给定时间间隔内来运行你的代码的最灵活的方式就是使用调度器。这可以通过将你的函数添加到文件&lt;a href="https://github.com/diydrones/ardupilot/blob/master/ArduCopter/ArduCopter.pde"&gt;ArduCopter.pde&lt;/a&gt;中的&lt;a href="https://github.com/diydrones/ardupilot/blob/master/ArduCopter/ArduCopter.pde#L788"&gt;&lt;code&gt;scheduler_tasks&lt;/code&gt;&lt;/a&gt;数组来完成。需要表明的是 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 05 Sep 2014 12:08:26 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-05:/blog/apm/2014-09-05-APM-ArduCopter规划新代码使之按一定频率运行.html</guid><category>APM</category><category>APM:Copter</category><category>飞控板</category><category>硬件</category></item><item><title>APM-添加新的飞行模式</title><link>http://liung.github.io/blog/apm/2014-09-05-APM-ArduCopter%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%9A%84%E9%A3%9E%E8%A1%8C%E6%A8%A1%E5%BC%8F.html</link><description>

&lt;p&gt;这部分将涵盖一些怎样创建一个新的高级别的飞行模式的基本操作步骤（类似于自稳，悬停等），这些新模式处于“the onion”（洋葱头工程）中的高级别代码控制部分，如之前&lt;a href="http://liung.github.io/blog/apm/2014-08-31-APM-ArduCopter姿态控制概览.html"&gt;姿态控制页面 …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 05 Sep 2014 11:01:10 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-05:/blog/apm/2014-09-05-APM-ArduCopter添加新的飞行模式.html</guid><category>APM</category><category>APM:Copter</category><category>飞控板</category><category>硬件</category></item><item><title>APM-添加新的参数</title><link>http://liung.github.io/blog/apm/2014-09-02-APM-%E6%B7%BB%E5%8A%A0%E6%96%B0%E7%9A%84%E5%8F%82%E6%95%B0.html</link><description>

&lt;p&gt;我们既可以在主执行代码中添加新的参数，也可以在库中添加。
&lt;/p&gt;
&lt;h3&gt;在主执行代码中添加参数&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Step #1&lt;/strong&gt;：在文件&lt;a href="https://github.com/diydrones/ardupilot/blob/master/ArduCopter/Parameters.h"&gt;Parameters.h&lt;/a&gt;参数类中的枚举变量（enum …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Tue, 02 Sep 2014 14:21:41 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-09-02:/blog/apm/2014-09-02-APM-添加新的参数.html</guid><category>APM</category><category>APM:Copter</category><category>飞控板</category><category>硬件</category></item><item><title>APM-ArduCopter姿态控制概览</title><link>http://liung.github.io/blog/apm/2014-08-31-APM-ArduCopter%E5%A7%BF%E6%80%81%E6%8E%A7%E5%88%B6%E6%A6%82%E8%A7%88.html</link><description>

&lt;p&gt;在从版本AC3.1向AC3.2的过渡中，姿态控制逻辑运算作为“the onion”（洋葱头）工程的一部分进行了重构。下面来展示重构后的程序执行流程。
&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;手动飞行模式 …&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 31 Aug 2014 21:53:09 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-31:/blog/apm/2014-08-31-APM-ArduCopter姿态控制概览.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>IPython学习笔记</title><link>http://liung.github.io/blog/python/2014-08-31-IPython%E5%91%BD%E4%BB%A4%E9%9B%86.html</link><description>&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ipython --pylab=inline:&lt;/strong&gt;ipython启动后默认导入numpy和matplotlib.pylab模块&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ipython qtconsole&lt;/strong&gt;:使用Qt Gui 后台 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sun, 31 Aug 2014 10:55:41 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-31:/blog/python/2014-08-31-IPython命令集.html</guid><category>python</category><category>ipython</category></item><item><title>APM:Copter相关库</title><link>http://liung.github.io/blog/apm/2014-08-30-APM-Arducopter%E7%9B%B8%E5%85%B3%E5%BA%93%E4%BB%8B%E7%BB%8D.html</link><description>

&lt;p&gt;这些&lt;a href="https://github.com/diydrones/ardupilot/tree/master/libraries"&gt;库文件&lt;/a&gt;也同样被ArduPlane和ArduRover所使用。下面将列出一系列高层次的库的说明和它们的函数说明。
&lt;/p&gt;
&lt;h3&gt;核心库&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/diydrones/ardupilot/tree/master/libraries/AP_AHRS"&gt;AP_AHRS&lt;/a&gt;：采用DCM（方向余弦矩阵方法）或EKF（扩展卡尔曼滤波方法 …&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 30 Aug 2014 15:53:36 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-30:/blog/apm/2014-08-30-APM-Arducopter相关库介绍.html</guid><category>APM:Copter</category><category>APM</category><category>硬件</category><category>C++</category></item><item><title>APM:Copter 代码预览</title><link>http://liung.github.io/blog/apm/2014-08-30-APM-Arducopter%E4%BB%A3%E7%A0%81%E9%A2%84%E8%A7%88.html</link><description>&lt;!-- PELICAN_BEGIN__SUMMARY --&gt;

&lt;p&gt;&lt;a href="https://github.com/diydrones/ardupilot"&gt;&lt;strong&gt;APM::Copter&lt;/strong&gt;&lt;/a&gt;代码主要放在ArduCopter文件夹中，并且和&lt;strong&gt;ArduPlane&lt;/strong&gt;和&lt;strong&gt;ArduRover&lt;/strong&gt;使用同样的&lt;a href="https://github.com/diydrones/ardupilot/tree/master/libraries"&gt;库文件&lt;/a&gt;。
&lt;/p&gt;
&lt;p&gt;下面这张图展示了从飞行模式到电机输出相关的高级视图 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 30 Aug 2014 15:29:29 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-30:/blog/apm/2014-08-30-APM-Arducopter代码预览.html</guid><category>APM</category><category>APM:Copter</category><category>飞控板</category><category>硬件</category></item><item><title>APM开发人员参考手册目录列表</title><link>http://liung.github.io/blog/apm/2014-08-29-APM-%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C%E7%9B%AE%E5%BD%95%E5%88%97%E8%A1%A8.html</link><description>

&lt;p&gt;从现在开始，我打算利用我空闲的时间，针对APM官网上的开发流程进行翻译，翻译不求精准，但求能准确传达要表达的意思即可，非专业译者，水平有限，敬请谅解。并且，还计划展开一系列的专题blog …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 29 Aug 2014 17:17:54 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-29:/blog/apm/2014-08-29-APM-开发人员参考手册目录列表.html</guid><category>APM</category><category>飞控板</category><category>硬件</category></item><item><title>APM-如何获取源码</title><link>http://liung.github.io/blog/apm/2014-08-29-APM-%E8%8E%B7%E5%8F%96%E6%BA%90%E7%A0%81.html</link><description>

&lt;p&gt;整个APM工程的源码都采用&lt;a href="http://git-scm.com/"&gt;git&lt;/a&gt;（译者注：一款自由和开源的分布式版本控制系统）进行代码管理，并且托管在&lt;a href="https://github.com/"&gt;github&lt;/a&gt;网站上。&lt;/p&gt;
&lt;p&gt;目前APM的源码以开源的形式托管在&lt;a href="https://github.com/diydrones/ardupilot"&gt;https …&lt;/a&gt;&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 29 Aug 2014 15:05:30 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-29:/blog/apm/2014-08-29-APM-获取源码.html</guid><category>APM</category><category>飞控板</category><category>硬件</category><category>Git</category></item><item><title>APM代码库解析</title><link>http://liung.github.io/blog/apm/2015-02-08-APM%E4%BB%A3%E7%A0%81%E5%BA%93%E8%A7%A3%E6%9E%90.html</link><description>&lt;h3&gt;AP_AHRS&lt;/h3&gt;
&lt;p&gt;AHRS（Attitude Heading Reference System，姿态航向参考系统）是APM用来计算飞行器的姿态航向相关库。主要包含了两种方法：1 …&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 29 Aug 2014 15:05:30 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-29:/blog/apm/2015-02-08-APM代码库解析.html</guid><category>APM</category></item><item><title>测试，这是我的第一个博客网站</title><link>http://liung.github.io/blog/qi-ta/home.html</link><description>&lt;p&gt;Category：Python
Tag: other&lt;/p&gt;
&lt;p&gt;这是用来测试的blog。第一次blog搭建过程。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Fri, 29 Aug 2014 00:00:00 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-29:/blog/qi-ta/home.html</guid></item><item><title>Pelican官方文档阅读笔记</title><link>http://liung.github.io/blog/python/2014-08-27-Pelican%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0.html</link><description>&lt;hr&gt;
&lt;h3&gt;Articles and pages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;article：一种有时间顺序的文件，诸如博客中的推送，一般都带有明确的日期。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;page：一般来讲不是一些暂时性的东西，经常用来充当博客中长时间不会改变的内容 …&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Wed, 27 Aug 2014 20:13:00 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2014-08-27:/blog/python/2014-08-27-Pelican官方文档阅读笔记.html</guid><category>python</category><category>博客</category></item><item><title>Quaternions and Key Bindings: Simple 3D Visualization in Matplotlib</title><link>http://liung.github.io/blog/python/simple-3d-visualization-in-matplotlib.html</link><description>&lt;p&gt;{% notebook 3DCube.ipynb cells[2:] %}&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">liung</dc:creator><pubDate>Sat, 24 Nov 2012 11:04:00 +0800</pubDate><guid isPermaLink="false">tag:liung.github.io,2012-11-24:/blog/python/simple-3d-visualization-in-matplotlib.html</guid></item></channel></rss>